version: '3.8'

services:
  pixelzx-dev:
    build:
      context: .
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
        - linux/arm64
        - linux/arm/v7
    container_name: pixelzx-dev-node
    restart: unless-stopped
    platform: ${DOCKER_DEFAULT_PLATFORM:-linux/amd64}
    ports:
      - "8545:8545"   # JSON-RPC
      - "8546:8546"   # WebSocket
      - "30303:30303" # P2P
      - "6060:6060"   # Metrics
    volumes:
      # 권한 문제 해결을 위한 볼륨 설정
      - ./data:/app/data:rw
      - ./keystore:/app/keystore:rw
      - ./logs:/app/logs:rw
      - ./configs/development.yaml:/app/config.yaml:ro
    environment:
      - PIXELZX_HOME=/app
      - PIXELZX_CONFIG=/app/config.yaml
      - PIXELZX_DATA_DIR=/app/data
      - PIXELZX_CHAIN_ID=8888
      - PIXELZX_NETWORK=development
      - PIXELZX_LOG_LEVEL=debug
      - PIXELZX_PLATFORM=${DOCKER_DEFAULT_PLATFORM:-linux/amd64}
    # 권한 문제 해결을 위한 사용자 설정
    user: "${UID:-1001}:${GID:-1001}"
    networks:
      - pixelzx-dev-net
    healthcheck:
      test: ["CMD", "/usr/local/bin/pixelzx", "version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
    # 개발 환경에서 초기화를 위한 설정
    command: >
      sh -c "
        echo '🔍 권한 확인 중...' &&
        ls -la /app/ &&
        echo '📁 디렉터리 생성 중...' &&
        mkdir -p /app/data /app/keystore /app/logs &&
        echo '🚀 PIXELZX 초기화 시작...' &&
        /usr/local/bin/pixelzx init --datadir /app/data --chain-id 8888 --network development &&
        echo '✅ 초기화 완료, 노드 시작...' &&
        /usr/local/bin/pixelzx start --config /app/config.yaml --datadir /app/data
      "

networks:
  pixelzx-dev-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16

# 개발 환경 도우미 명령어들
x-dev-commands:
  init: &init-command
    docker-compose -f docker-compose.dev.yml run --rm pixelzx-dev /usr/local/bin/pixelzx init --datadir /app/data
  
  start: &start-command
    docker-compose -f docker-compose.dev.yml up -d
  
  logs: &logs-command
    docker-compose -f docker-compose.dev.yml logs -f pixelzx-dev
  
  shell: &shell-command
    docker-compose -f docker-compose.dev.yml exec pixelzx-dev sh
  
  stop: &stop-command
    docker-compose -f docker-compose.dev.yml down
  
  permission-fix: &permission-fix-command
    sudo chown -R $(id -u):$(id -g) ./data ./keystore ./logs